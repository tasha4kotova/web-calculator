document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('studentModal');
    const addStudentBtn = document.getElementById('addStudent');
    const closeBtn = document.querySelector('.close');
    const studentForm = document.getElementById('studentForm');
    const studentsTableBody = document.getElementById('studentsTableBody');
    const modalTitle = document.getElementById('modalTitle');

    let editingStudentId = null;

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadStudents();

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞
    addStudentBtn.addEventListener('click', function() {
        editingStudentId = null;
        modalTitle.textContent = '–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞';
        studentForm.reset();
        modal.style.display = 'block';
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeBtn.addEventListener('click', function() {
        modal.style.display = 'none';
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    window.addEventListener('click', function(event) {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    studentForm.addEventListener('submit', async function(e) {
        e.preventDefault();

        const studentData = {
            name: document.getElementById('name').value,
            lastName: document.getElementById('lastName').value,
            firstName: document.getElementById('firstName').value,
            yearBirth: parseInt(document.getElementById('yearBirth').value)
        };

        try {
            if (editingStudentId) {
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
                await updateStudent(editingStudentId, studentData);
            } else {
                // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
                await addStudent(studentData);
            }

            modal.style.display = 'none';
            loadStudents();
        } catch (error) {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞: ' + error.message);
        }
    });

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    async function loadStudents() {
        try {
            const response = await fetch('/web-calculator/api/students');
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤');
            }

            const students = await response.json();
            displayStudents(students);
        } catch (error) {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ' + error.message);
        }
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ
    function displayStudents(students) {
        studentsTableBody.innerHTML = '';
        students.forEach(student => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${student.name}</td>
                <td>${student.lastName}</td>
                <td>${student.firstName}</td>
                <td>${student.yearBirth}</td>
                <td class="action-buttons">
                    <button onclick="editStudent(${student.id})" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úé</button>
                    <button onclick="deleteStudent(${student.id})" title="–£–¥–∞–ª–∏—Ç—å">üóë</button>
                </td>
            `;
            studentsTableBody.appendChild(row);
        });
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    async function addStudent(studentData) {
        const response = await fetch('/web-calculator/api/students', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(studentData)
        });

        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞');
        }

        return response.json();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
    async function updateStudent(id, studentData) {
        const response = await fetch(`/web-calculator/api/students/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(studentData)
        });

        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞');
        }

        return response.json();
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
    async function deleteStudent(id) {
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞?')) {
            return;
        }

        const response = await fetch(`/web-calculator/api/students/${id}`, {
            method: 'DELETE'
        });

        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞');
        }

        loadStudents();
    }

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
    window.editStudent = async function(id) {
        try {
            const response = await fetch(`/web-calculator/api/students/${id}`);
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞');
            }

            const student = await response.json();
            editingStudentId = id;
            modalTitle.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞';

            document.getElementById('name').value = student.name;
            document.getElementById('lastName').value = student.lastName;
            document.getElementById('firstName').value = student.firstName;
            document.getElementById('yearBirth').value = student.yearBirth;

            modal.style.display = 'block';
        } catch (error) {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞: ' + error.message);
        }
    };

    // –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ (–≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
    window.deleteStudent = deleteStudent;
}); 